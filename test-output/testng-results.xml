<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-04-14T02:00:29 EET" name="Default suite" finished-at="2020-04-14T02:00:42 EET" duration-ms="13177">
    <groups>
    </groups>
    <test started-at="2020-04-14T02:00:29 EET" name="Default test" finished-at="2020-04-14T02:00:42 EET" duration-ms="13177">
      <class name="tests.UserSignUpWithJavaFakerTest">
        <test-method is-config="true" signature="startDriver(java.lang.String)[pri:0, instance:tests.UserSignUpWithJavaFakerTest@427ae189]" started-at="2020-04-14T02:00:19 EET" name="startDriver" finished-at="2020-04-14T02:00:29 EET" duration-ms="10421" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startDriver -->
        <test-method signature="UserCanSignUpSuccessfully()[pri:1, instance:tests.UserSignUpWithJavaFakerTest@427ae189]" started-at="2020-04-14T02:00:29 EET" name="UserCanSignUpSuccessfully" finished-at="2020-04-14T02:00:35 EET" duration-ms="5855" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserCanSignUpSuccessfully -->
        <test-method is-config="true" signature="screenShotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.UserSignUpWithJavaFakerTest@427ae189]" started-at="2020-04-14T02:00:35 EET" name="screenShotOnFailure" finished-at="2020-04-14T02:00:35 EET" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserCanSignUpSuccessfully status=SUCCESS method=UserSignUpWithJavaFakerTest.UserCanSignUpSuccessfully()[pri:1, instance:tests.UserSignUpWithJavaFakerTest@427ae189] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShotOnFailure -->
        <test-method signature="RegisteredUserCanLogout()[pri:0, instance:tests.UserSignUpWithJavaFakerTest@427ae189]" started-at="2020-04-14T02:00:35 EET" name="RegisteredUserCanLogout" finished-at="2020-04-14T02:00:37 EET" depends-on-methods="tests.UserSignUpWithJavaFakerTest.UserCanSignUpSuccessfully" duration-ms="2098" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisteredUserCanLogout -->
        <test-method is-config="true" signature="screenShotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.UserSignUpWithJavaFakerTest@427ae189]" started-at="2020-04-14T02:00:37 EET" name="screenShotOnFailure" finished-at="2020-04-14T02:00:37 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RegisteredUserCanLogout status=SUCCESS method=UserSignUpWithJavaFakerTest.RegisteredUserCanLogout()[pri:0, instance:tests.UserSignUpWithJavaFakerTest@427ae189] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShotOnFailure -->
        <test-method signature="UserCanLogin()[pri:0, instance:tests.UserSignUpWithJavaFakerTest@427ae189]" started-at="2020-04-14T02:00:37 EET" name="UserCanLogin" finished-at="2020-04-14T02:00:42 EET" depends-on-methods="tests.UserSignUpWithJavaFakerTest.RegisteredUserCanLogout" duration-ms="4686" status="FAIL">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertTrue(Assert.java:52)
at pages.LoginPage.userLogin(LoginPage.java:40)
at tests.UserSignUpWithJavaFakerTest.UserCanLogin(UserSignUpWithJavaFakerTest.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserCanLogin -->
        <test-method is-config="true" signature="screenShotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.UserSignUpWithJavaFakerTest@427ae189]" started-at="2020-04-14T02:00:42 EET" name="screenShotOnFailure" finished-at="2020-04-14T02:00:42 EET" duration-ms="317" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserCanLogin status=FAILURE method=UserSignUpWithJavaFakerTest.UserCanLogin()[pri:0, instance:tests.UserSignUpWithJavaFakerTest@427ae189] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShotOnFailure -->
        <test-method is-config="true" signature="stopDriver()[pri:0, instance:tests.UserSignUpWithJavaFakerTest@427ae189]" started-at="2020-04-14T02:00:42 EET" name="stopDriver" finished-at="2020-04-14T02:00:43 EET" duration-ms="876" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopDriver -->
      </class> <!-- tests.UserSignUpWithJavaFakerTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
